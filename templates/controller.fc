package ${packageName}.api.controller;

import ${packageName}.api.utils.Result;
import ${packageName}.api.utils.StatusCode;
import ${packageName}.core.utils.DataGrid;
import ${packageName}.entity.${modelName};
import ${packageName}.service.*;
import ${packageName}.core.utils.Pager;
import com.alibaba.dubbo.config.annotation.Reference;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.lang.*;
import java.util.*;

/**
 * ${modelRemark} 控制器
 *
 * @author ${author}
 * @project ${project}
 * @date ${now}
 */
@Controller
@RequestMapping("${url}")
public class ${modelName}Controller extends BaseController{

    <%
        var variable=$imports.low_first(modelName);
        var service=variable+"Service";
     %>
    @Reference
    private ${modelName}Service ${service};

    <%if(compile){%>
    <%for(var i in compile){
        var m = compile[i];
    %>
    <%=#m.controller%>
    <%}}%>



    /**
     * 保存
     *
     * @param ${variable}
     * @return
     **/
    @ResponseBody
    @RequestMapping("save")
    public Result save(${modelName} ${variable}) {

        Result result = Result.getError(StatusCode.SYSTEM_ERROR);

        try {

            int rs = ${service}.insertSelective(${variable});
            result = Result.getSuccess(rs);

        } catch (Exception e) {
            log.error("error:",e);
        }

        return result;
    }

   /**
    * 修改
    *
    * @param ${variable}
    * @return
    **/
    @ResponseBody
    @RequestMapping("update")
    public Result update(${modelName} ${variable}) {

        checkValues("id");

        Result result = Result.getError(StatusCode.SYSTEM_ERROR);

        try {
            int rs = ${service}.updateByPrimaryKeySelective(${variable});
            result = Result.getSuccess(rs);
        } catch (Exception e) {
            log.error("error:",e);
        }

        return result;
    }

    /**
     * 分页获取列表
     *
     * @param pageNo
     * @param pageSize
     * @param ${variable}
     * @return
     */
    @ResponseBody
    @RequestMapping("list")
    public Result getList(Integer pageNo, Integer pageSize, ${modelName} ${variable}) {
        Result result = Result.getError(StatusCode.SYSTEM_ERROR);

        try {
            DataGrid dataGrid = ${service}.getDataGridByModel(${variable}, new Pager(pageNo,pageSize));
            result = Result.getSuccess(dataGrid);
        } catch (Exception e) {
            log.error("error:", e);
        }

        return result;
    }

    /**
     * 根据id逻辑删除
     *
     * @param id
     * @return
     **/
    @ResponseBody
    @RequestMapping("delete")
    public Result deleteById(String id) {

        checkValues("id");

        Result result = Result.getError(StatusCode.SYSTEM_ERROR);

        try {
            int rs = ${service}.deleteById(id);
            result = Result.getSuccess(rs);
        } catch (Exception e) {
            log.error("error:", e);
        }

        return result;
    }
}



